import uuid

from django.contrib.auth.models import User
from django.core.validators import FileExtensionValidator
from django.db.models import (
    PROTECT,
    CharField,
    DateTimeField,
    FileField,
    ForeignKey,
    Model,
    TextField,
    UUIDField,
)

from llm.taxonomies import SummaryLength


class CreateUpdate(Model):
    created = DateTimeField(auto_now_add=True)
    updated = DateTimeField(auto_now=True)

    class Meta:
        abstract = True


class Summary(CreateUpdate):
    """
    Model representing a summary generated from a PDF file using the
    Gemini API.

    This model stores extracted text from an uploaded PDF, along with
    a summary and metadata related to the summarization process.
    """

    uid = UUIDField(
        primary_key=True,
        default=uuid.uuid4,
        editable=False,
        help_text="Unique identifier for each summary instance.",
    )
    extracted_text = TextField(
        help_text="Extracted text content from the uploaded PDF file."
    )
    attachment = FileField(
        validators=[FileExtensionValidator(["pdf"])],
        help_text="Only PDF files are allowed for processing.",
    )
    title = CharField(
        max_length=255,
        help_text="Title of the document, generated by the Gemini API.",
    )
    summary = TextField(
        help_text="Summarized content of the extracted text, "
        "generated using the Gemini API."
    )
    summary_length = CharField(
        choices=SummaryLength.choices,
        default=SummaryLength.SHORT,
        help_text="Determines the length of the summary "
        "generated from the Gemini API.",
    )
    user = ForeignKey(
        User,
        on_delete=PROTECT,
        blank=True,
        null=True,
        help_text="Reference to the user who generated "
        "the summary (for logged-in users).",
    )
    session_uid = UUIDField(
        blank=True,
        null=True,
        help_text="Session-based identifier for non-logged-in "
        "users, enabling chat history storage.",
    )

    def __str__(self):
        return self.title

    class Meta:
        verbose_name_plural = "Summaries"
